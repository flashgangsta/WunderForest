package com.rr {	import com.flashgangsta.managers.ButtonManager;	import com.rr.events.NavigationEvent;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;	import flash.events.EventDispatcher;		/**	 * ...	 * @author Sergey Krivtsov (flashgangsta@gmail.com)	 */	public class Navigation extends Sprite {				/// Кнопка "Лес"		private var forestBtn:MovieClip;		/// Кнопка "Нора"		private var holeBtn:MovieClip;		/// Кнопка "Магазин"		private var shopBtn:MovieClip;		/// Кнопка "Стрельба"		private var fightBtn:MovieClip;		/// Список кнопок навигации		private var navigationButtonsList:Array = [];		///		private var pageViewer:PageViewer = Helper.getPageViewer();				/**		 * Конструктор		 */				public function Navigation() {            trace("Navigation");      			forestBtn = getChildByName( "forest_mc" ) as MovieClip;			holeBtn = getChildByName( "hole_mc" ) as MovieClip;			shopBtn = getChildByName( "shop_mc" ) as MovieClip;			fightBtn = getChildByName( "fight_mc" ) as MovieClip;						navigationButtonsList = [ forestBtn, holeBtn, shopBtn, fightBtn ];						ButtonManager.addButtonGroup( navigationButtonsList, true, forestBtn, false, null, changePage );						var dispatcher:EventDispatcher = Helper.getDispatcher();						dispatcher.addEventListener( NavigationEvent.SHOP_CALLED, navigateToShop );			dispatcher.addEventListener( NavigationEvent.BOARS_SHOP_CALLED, navigateToBoarsShop );			dispatcher.addEventListener( NavigationEvent.FAY_SHOP_CALLED, navigateToFayShop );			dispatcher.addEventListener( NavigationEvent.CELLAR_CALLED, navigateToCellar );			dispatcher.addEventListener( NavigationEvent.PERS_SHOP_CALLED, navigateToPesonagesShop );			dispatcher.addEventListener( NavigationEvent.HOLE_CALLED, navigateToHole );			dispatcher.addEventListener( NavigationEvent.BANK_CALLED, navigateToBank );			dispatcher.addEventListener( NavigationEvent.FOREST_CALLED, navigateToForest );		}				/**		 * Обработка события нажатия одной из кнопок навигации		 * @param	target		 */				private function changePage( target:MovieClip ):void {			var page_id:String;			switch( target ) {				// Лес				case forestBtn : {					page_id = PageViewer.PAGE_FOREST;					break;				}				// Нора				case holeBtn : {					if( Helper.getProfile().personagesList.length ) {						page_id = PageViewer.PAGE_HOLE;					} else {						var message:String = "Чтобы попасть в нору, нужно купить персонажа.\nПерейти к покупке персонажа?";						var title:String = "Стояночка!";												Main.dialogs.createConfirmationWindow( title, message, null, navigateToPesonagesShop, stayingHere );						return;					}					break;				}				// Магазин				case shopBtn : {					page_id = PageViewer.PAGE_SHOP;					break;				}			}						pageViewer.setPage( page_id );		}				/**		 * Осуществляет переход к магазину персонажей		 */				private function navigateToPesonagesShop( event:NavigationEvent = null ):void {			pageViewer.setPage( PageViewer.PAGE_PERSONAGES_SHOP );			resetSelection();		}				/**		 * Перемещает в склад		 * @param	event		 */				private function navigateToCellar( event:NavigationEvent ):void {			pageViewer.setPage( PageViewer.PAGE_CELLAR );			resetSelection();		}				/**		 * Перемещает в магазин		 * @param	event		 */				private function navigateToShop( event:NavigationEvent ):void {			pageViewer.setPage( PageViewer.PAGE_SHOP );			ButtonManager.setSelectionOnGroup( shopBtn );		}				/**		 * Перемещает в магазин кабанов		 * @param	event		 */				private function navigateToBoarsShop( event:NavigationEvent ):void {			pageViewer.setPage( PageViewer.PAGE_BOARS_SHOP );			ButtonManager.setSelectionOnGroup( shopBtn );		}				/**		 * Перемещает в магазин феи		 * @param	event		 */				private function navigateToFayShop( event:NavigationEvent ):void {			pageViewer.setPage( PageViewer.PAGE_FAY_SHOP );			ButtonManager.setSelectionOnGroup( shopBtn );		}				/**		 * Осуществляет переход в нору		 * @param	event		 */				private function navigateToHole( event:NavigationEvent = null ):void {			ButtonManager.setSelectionOnGroup( holeBtn );			changePage( holeBtn );		}				/**		 * Осуществляет переход в банк		 * @param	event		 */				private function navigateToBank( event:NavigationEvent ):void {			//TODO: Вставить переход в банк когда он появится			trace( "go to bank" );		}				/**		 * Осуществляет переход в лес		 */				private function navigateToForest( event:NavigationEvent ):void {			ButtonManager.setSelectionOnGroup( forestBtn );			changePage( forestBtn );		}				/**		 * Возвращает в предыдущий раздел		 */				private function stayingHere():void {			ButtonManager.returnOldSelectionOfGroup( holeBtn );		}				/**		 * Сбрасывает выделение кнопки выбранного раздела		 */				private function resetSelection():void {			ButtonManager.resetSelectionOnGroup( holeBtn );		}			}}
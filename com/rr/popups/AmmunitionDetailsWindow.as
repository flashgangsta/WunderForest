package com.rr.popups {	import com.rr.Helper;	import com.rr.ModelData;	import com.rr.personage.Personage;	import com.rr.PersonageData;	import com.rr.PersonagesPool;	import com.rr.Profile;	import com.rr.ui.PersonagesSelector;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;		/**	 * ...	 * @author Sergey Krivtsov (flashgangsta@gmail.com)	 */		public class AmmunitionDetailsWindow extends ShopItemDetailsWindow {				/// Зона установки персонажа		private var personagePlace:Sprite;		/// Контейнер в который будет помещён персонаж		private var persContainer:Sprite;		/// Персонаж		private var personage:Personage;		/// Иконка примерки предмета справа		private var sideRightBtn:MovieClip;		/// Иконка примерки предмета слева		private var sideLeftBtn:MovieClip;		/// Иконка выбранной стороны для примерки		private var sideIco:MovieClip;		/// Компонент выбора персонажа		private var personagesSelector:PersonagesSelector;				public function AmmunitionDetailsWindow( data:ModelData ) {			itemData = data;			super();						personagePlace = getChildByName( "personagePlace_mc" ) as Sprite;			sideRightBtn = getChildByName( "sideRightBtn_mc" ) as MovieClip;			sideLeftBtn = getChildByName( "sideLeftBtn_mc" ) as MovieClip;			sideIco = getChildByName( "sideIco_mc" ) as MovieClip;			personagesSelector = getChildByName( "personagesSelector_mc" ) as PersonagesSelector;						addPers();			initSideIcos();			personagesSelector.addEventListener( Event.CHANGE, onPersonageChanged );		}				/**		 * Инициалищация иконок выбора стороны		 */				private function initSideIcos():void {			sideRightBtn.label_mc.label_txt.text = String( sideRightBtn.label_mc.label_txt.text ).replace( "%side%", "справа" );			sideLeftBtn.label_mc.label_txt.text = String( sideLeftBtn.label_mc.label_txt.text ).replace( "%side%", "слева" );		}				/**		* Выводит персонажа		*/				private function addPers():void {			var profile:Profile = Helper.getProfile();			var personagesPool:PersonagesPool = PersonagesPool.getInstance();			var personageData:PersonageData =  Helper.getProfile().currentPersonage;			personage = personagesPool.getPersonage( personageData, personagePlace.getBounds( this ), this );		}				/**		 * Обработка смены персонажа		 */				private function onPersonageChanged( event:Event ):void {					}			}}
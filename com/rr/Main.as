/** * @author Sergey Krivtsov */package com.rr {		import com.flashgangsta.managers.ButtonManager;	import flash.display.MovieClip;	import flash.events.Event;	import com.rr.api.Connector;	import flash.events.FullScreenEvent;	import flash.geom.Point;	import flash.ui.MouseCursor;	import flash.utils.getQualifiedClassName;	import net.hires.debug.Stats;	import vk.APIConnection;	import com.rr.dialogs.DialogFactory;	import flash.system.Security;	import flash.display.StageScaleMode;	import flash.display.StageAlign;	import caurina.transitions.Tweener;	import flash.display.Stage;	import flash.net.navigateToURL;	import flash.net.URLRequest;			public class Main extends Roulette {				public static const MARGIN:int = 10;		public static const FPS:int = 31;				private var isUser:Boolean = false;				private static var updateList:Array = [];		private static var updateListLength:int = 0;				public var cursorContainer:MovieClip = new MovieClip();				public static var isDebugMode:Boolean;		/// Статичные предметы для записи		public static var staticItems:Object;		public static var dialogs:DialogFactory;		public static var friendslist:Friendslist;		public static var settings:Settings;		public static var persLoadingHistory:Object = { };				/**		 * Конструктор		 */				public function Main() {			Security.allowDomain( "*" );			Security.loadPolicyFile( "http://85.25.119.18:8080/server-v1/crossdomain.xml" );						super();						if ( !parent ) {				super.addEventListener( Roulette.INIT, onInit );			} else {				onInit();			}		}				/**		 * Обработка окончания инициализации происходящей в суперклассе		 * @param	event		 */				public function onInit( event:Event = null ):void {			if ( event ) super.removeEventListener( Roulette.INIT, onInit );			addEventListener( Event.ADDED_TO_STAGE, addedToStage );		}				/**		 * Обработка добавления в список отображения		 * @param	event		 */				private function addedToStage( event:Event ):void {			removeEventListener( Event.ADDED_TO_STAGE, addedToStage );			isDebugMode = loaderInfo.url.indexOf( "http" ) === -1;						stage.addEventListener( Event.ACTIVATE, onActivate );			stage.addEventListener( Event.DEACTIVATE, onDeactivate );			stage.scaleMode = StageScaleMode.NO_SCALE;			stage.align = StageAlign.TOP_LEFT;									Helper.setStage( stage );			Main.dialogs = new DialogFactory( this, stage );						Helper.setPersonageModels( staticItems.personages );			Helper.setItemModels( staticItems.items );			Helper.setProfile( personalData, userData );						Friends.recordFriends( appUsersProfilesList, allFriendsProfilesList ); //Записываем друзей						addChild( Helper.getScreenController() );						addPageViewer();			addHeader();			addFriendslist();			addSettings();						//TODO: Замена курсора, временно отключена ибо заебала			//ButtonManager.addCustomMouseCursor( cursorContainer, MouseCursor, stage );						addChild( Helper.getPopupsFactory() );			addChild( Helper.getScreenController() );			addChild( cursorContainer );						if( isDebugMode ) {				var stats:Stats = new Stats();				addChild( stats );			}		}				private function onActivate( event:Event ):void {			stage.frameRate = FPS;		}				private function onDeactivate( event:Event ):void {			stage.frameRate = 0;		}				private function addHeader():void {			addChild( Helper.getHeader() );		}				private function addFriendslist():void {			friendslist = new Friendslist();			addChild( friendslist );		}				private function addSettings():void {			settings = new Settings();			addChild( settings );		}				private function addPageViewer():void {			addChild( Helper.getPageViewer() );		}			}	}